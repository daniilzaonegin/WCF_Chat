//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatClient.ChatServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="ChatService", ConfigurationName="ChatServiceReference.ChatServiceLib", CallbackContract=typeof(ChatClient.ChatServiceReference.ChatServiceLibCallback))]
    public interface ChatServiceLib {
        
        [System.ServiceModel.OperationContractAttribute(Action="ChatService/ChatServiceLib/JoinTheConversation", ReplyAction="ChatService/ChatServiceLib/JoinTheConversationResponse")]
        int JoinTheConversation(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="ChatService/ChatServiceLib/JoinTheConversation", ReplyAction="ChatService/ChatServiceLib/JoinTheConversationResponse")]
        System.Threading.Tasks.Task<int> JoinTheConversationAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="ChatService/ChatServiceLib/ReceiveMessage")]
        void ReceiveMessage(string message, string[] addressList, string userMessage);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="ChatService/ChatServiceLib/ReceiveMessage")]
        System.Threading.Tasks.Task ReceiveMessageAsync(string message, string[] addressList, string userMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="ChatService/ChatServiceLib/LeaveTheConversation", ReplyAction="ChatService/ChatServiceLib/LeaveTheConversationResponse")]
        int LeaveTheConversation(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="ChatService/ChatServiceLib/LeaveTheConversation", ReplyAction="ChatService/ChatServiceLib/LeaveTheConversationResponse")]
        System.Threading.Tasks.Task<int> LeaveTheConversationAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ChatServiceLibCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="ChatService/ChatServiceLib/NotifyUserJoinedTheConversation")]
        void NotifyUserJoinedTheConversation(string userName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="ChatService/ChatServiceLib/NotifyUserOfMessage")]
        void NotifyUserOfMessage(string userName, string userMessage);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="ChatService/ChatServiceLib/NotifyUserLeftTheConversation")]
        void NotifyUserLeftTheConversation(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ChatServiceLibChannel : ChatClient.ChatServiceReference.ChatServiceLib, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceLibClient : System.ServiceModel.DuplexClientBase<ChatClient.ChatServiceReference.ChatServiceLib>, ChatClient.ChatServiceReference.ChatServiceLib {
        
        public ChatServiceLibClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatServiceLibClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatServiceLibClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceLibClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceLibClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int JoinTheConversation(string userName) {
            return base.Channel.JoinTheConversation(userName);
        }
        
        public System.Threading.Tasks.Task<int> JoinTheConversationAsync(string userName) {
            return base.Channel.JoinTheConversationAsync(userName);
        }
        
        public void ReceiveMessage(string message, string[] addressList, string userMessage) {
            base.Channel.ReceiveMessage(message, addressList, userMessage);
        }
        
        public System.Threading.Tasks.Task ReceiveMessageAsync(string message, string[] addressList, string userMessage) {
            return base.Channel.ReceiveMessageAsync(message, addressList, userMessage);
        }
        
        public int LeaveTheConversation(string userName) {
            return base.Channel.LeaveTheConversation(userName);
        }
        
        public System.Threading.Tasks.Task<int> LeaveTheConversationAsync(string userName) {
            return base.Channel.LeaveTheConversationAsync(userName);
        }
    }
}
